.section print
.temps r5, r6, r7

print_stack:
	r3 := r1
	print_loop:
		if (r3 == valuestack) goto waiting
		output ">>> "
		goto print_function linking r4
		finish_digit:
		output "\n"
		pop stack r2
		r3 := r3 + 1
		goto print_loop
	goto waiting

print_function:
	push r4 on stack r2
	r4 := m[r0][r3]
	if (r4 <s 0) goto print_neg
	begin_recurse:
		if (r4 >s 9) goto recurse
		r4 := r4 + '0'
		output r4
		goto print_lsb_stack 

print_neg:
	output "-"
	r4 := r4 - 1
	r4 := r4 nand r4
	goto begin_recurse

print_lsb_stack:
	print_stack_loop:
		if(m[r0][r2] == finish_digit) goto finish_digit using r4
		pop r4 off stack r2
		r4 := r4 + '0'
		output r4
		goto print_stack_loop

.section recursive
.temp r6, r7

recurse:
	r5 := r4 mod 10
	push r5 on stack r2
	r4 := r4 / 10
	goto begin_recurse
